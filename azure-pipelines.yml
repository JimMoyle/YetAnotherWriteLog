# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-2019'

steps:
- task: PowerShell@2
  displayName: 'Install and Run Pester'
  inputs:
    targetType: 'inline' # Optional. Options: filePath, inline
    #filePath: # Required when targetType == FilePath
    #arguments: # Optional
    script:     
      Write-Output $PSVErsiontable
      Install-Module -Name Pester -Force -SkipPublisherCheck
      Get-Module -Name Pester
      Invoke-Pester -OutputFile PesterTest.xml -OutputFormat NUnitXml' # Required when targetType == Inline
    #errorActionPreference: 'stop' # Optional. Options: stop, continue, silentlyContinue
    #failOnStderr: false # Optional
    #ignoreLASTEXITCODE: false # Optional
    #pwsh: false # Optional
    #workingDirectory: # Optional

- task: PublishTestResults@2
  inputs:
    testRunTitle: 'Pester Test Results'
    buildPlatform: 'Windows'
    testRunner: 'NUnit'
    testResultsFiles: '.\PesterTest.xml'
    failTaskOnFailedTests: true

#- job: 'Run Pester'
  #powershell: Invoke-Pester -OutputFile PesterTest.xml -OutputFormat NUnitXml
#  displayName: 'Run Pester'